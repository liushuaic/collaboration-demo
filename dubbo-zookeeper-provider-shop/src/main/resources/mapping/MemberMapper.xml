<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- mybatis框架只有接口 没有实现类
     mybatis的映射文件就相当于是接口的实现类
               主要用来编写sql语句
     mapper 需要与映射接口对应
     namespace 配置类的全限定名
 -->
<mapper namespace="com.jk.mapper.MemberMapper" >

    <resultMap type="com.jk.model.MemberRank" id="mr">
        <id column="mrid" property="mrid"/>
        <result column="mrname" property="mrname"></result>
        <result column="scale" property="scale"></result>
        <result column="amount" property="amount"></result>
        <result column="isspecial" property="isspecial"></result>
        <result column="isdefault" property="isdefault"></result>
        <result column="membersid" property="membersid"></result>
        <result column="promotionsid" property="promotionsid"></result>
    </resultMap>

    <select id="queryMenberList" resultMap="mr">
        SELECT * FROM (
            SELECT A.*,ROWNUM RN FROM (
                SELECT * FROM T_MemberRank
            )A
        )WHERE RN BETWEEN #{begin} AND #{end}
    </select>

    <select id="queryMenberCount" resultMap="mr">
        SELECT * FROM T_MemberRank
    </select>

    <select id="queryMemberById" resultMap="mr">
        SELECT * FROM T_MemberRank where mrid = #{id}
    </select>
    <insert id="addMember">
        INSERT INTO T_MemberRank
        VALUES (
            #{mrid,jdbcType=VARCHAR},
            #{mrname,jdbcType=VARCHAR},
            #{isdefault,jdbcType=VARCHAR},
            #{isspecial,jdbcType=VARCHAR},
            #{membersid,jdbcType=VARCHAR},
            #{promotionsid,jdbcType=VARCHAR},
            #{scale,jdbcType=DOUBLE},
            #{amount,jdbcType=DOUBLE}
        )
    </insert>
    <update id="updateMember">
          update T_MemberRank set
           mrid = #{mrid,jdbcType=VARCHAR},
           mrname = #{mrname,jdbcType=VARCHAR},
           isdefault = #{isdefault,jdbcType=VARCHAR},
           isspecial = #{isspecial,jdbcType=VARCHAR},
           membersid = #{membersid,jdbcType=VARCHAR},
           promotionsid = #{promotionsid,jdbcType=VARCHAR},
           scale = #{scale,jdbcType=DOUBLE},
           amount = #{amount,jdbcType=DOUBLE}
           where mrid = #{mrid}
    </update>
    <delete id="delMember">
        delete from T_MemberRank where mrid in (${ids})
    </delete>
</mapper>