<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- mybatis框架只有接口 没有实现类
     mybatis的映射文件就相当于是接口的实现类
               主要用来编写sql语句
     mapper 需要与映射接口对应
     namespace 配置类的全限定名
 -->
<mapper namespace="com.jk.mapper.DingdanMapper" >
    <select id="queryDaiping" resultType="com.jk.model.Order">
        select t1.orderid,t1.ordercode,t1.paymentmethodname,
        t1.orderstatus,t1.shippingstatus,t1.paymentstatus,t1.createdatetime,t2.phone,
        t2.address,t2.consignee,t3.name,t3.price from t_order t1
        left join t_shipping t2 on t2.shid = t1.shippingsid
        left join t_product t3 on t3.sn = t1.productid
         where t1.orderstatus = 4
    </select>

    <select id="queryAll" resultType="com.jk.model.Order">
        select t1.orderid,t1.ordercode,t1.paymentmethodname,
        t1.orderstatus,t1.shippingstatus,t1.paymentstatus,t1.createdatetime,t2.phone,
        t2.address,t2.consignee,t3.name,t3.price from t_order t1
        left join t_shipping t2 on t2.shid = t1.shippingsid
        left join t_product t3 on t3.sn = t1.productid
    </select>
    
    <update id="FuKuan">
        update t_order set orderstatus = 2,shippingstatus=2,paymentstatus=2 where orderid = #{id}
    </update>
    <update id="FaHuo">
        update t_order set orderstatus = 3,shippingstatus=3,paymentstatus=3 where orderid = #{id}
    </update>
    <update id="ShouHuo">
        update t_order set orderstatus = 4,shippingstatus=4,paymentstatus=4 where orderid = #{id}
    </update>
    <update id="TuiHuo">
        update t_order set orderstatus = 5,shippingstatus=5,paymentstatus=5 where orderid = #{id}
    </update>
    <update id="tongyituihuo">
        update t_order set orderstatus = 6,shippingstatus=6,paymentstatus=6 where orderid = #{id}
    </update>
</mapper>